; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\pwm.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\pwm.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Mylib -I..\Libraries -I..\CM3 -I..\User -I..\User\debug -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\pwm.crf ..\Mylib\pwm.c]
                          THUMB

                          AREA ||i.Moto_Init||, CODE, READONLY, ALIGN=1

                  Moto_Init PROC
;;;61      ******************************************************************************/
;;;62     void Moto_Init(void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64       PWM_GPIO_Config();
000002  f7fffffe          BL       PWM_GPIO_Config
;;;65       PWM_Configuration();
000006  f7fffffe          BL       PWM_Configuration
;;;66     }
00000a  bd10              POP      {r4,pc}
;;;67     
                          ENDP


                          AREA ||i.MotorSpeedOut||, CODE, READONLY, ALIGN=2

                  MotorSpeedOut PROC
;;;111     ******************************************************************************/
;;;112    void MotorSpeedOut(float f_Val) 
000000  b510              PUSH     {r4,lr}
;;;113    {
000002  4604              MOV      r4,r0
;;;114    
;;;115     if(f_Val > 0) 
000004  2100              MOVS     r1,#0
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       __aeabi_cfrcmple
00000c  d205              BCS      |L2.26|
;;;116     f_Val += MOTOR_OUT_DEAD_VAL;
00000e  4910              LDR      r1,|L2.80|
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       __aeabi_fadd
000016  4604              MOV      r4,r0
000018  e009              B        |L2.46|
                  |L2.26|
;;;117     else if(f_Val < 0) 
00001a  2100              MOVS     r1,#0
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       __aeabi_cfcmple
000022  d204              BCS      |L2.46|
;;;118     f_Val -= MOTOR_OUT_DEAD_VAL;
000024  490a              LDR      r1,|L2.80|
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       __aeabi_fsub
00002c  4604              MOV      r4,r0
                  |L2.46|
;;;119     
;;;120     if(f_Val>PWM_Period)
00002e  4909              LDR      r1,|L2.84|
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       __aeabi_cfrcmple
000036  d201              BCS      |L2.60|
;;;121     {
;;;122    	 f_Val=PWM_Period;
000038  4c06              LDR      r4,|L2.84|
00003a  e005              B        |L2.72|
                  |L2.60|
;;;123     }
;;;124     else if(f_Val<-PWM_Period)
00003c  4906              LDR      r1,|L2.88|
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       __aeabi_cfcmple
000044  d200              BCS      |L2.72|
;;;125     {
;;;126    	  f_Val=-PWM_Period;
000046  4c04              LDR      r4,|L2.88|
                  |L2.72|
;;;127     }
;;;128     SetMotorVoltage(f_Val);
000048  4620              MOV      r0,r4
00004a  f7fffffe          BL       SetMotorVoltage
;;;129    }
00004e  bd10              POP      {r4,pc}
;;;130    
                          ENDP

                  |L2.80|
                          DCD      0x42c80000
                  |L2.84|
                          DCD      0x459c4000
                  |L2.88|
                          DCD      0xc59c4000

                          AREA ||i.PWM_Configuration||, CODE, READONLY, ALIGN=1

                  PWM_Configuration PROC
;;;28     }
;;;29     void PWM_Configuration()
000000  b500              PUSH     {lr}
;;;30     {
000002  b087              SUB      sp,sp,#0x1c
;;;31     	/**********??????************/
;;;32     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;33     	TIM_OCInitTypeDef        TIM_OCInitSturcture;
;;;34       /*************??????**************/
;;;35       RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);//??????
000004  2101              MOVS     r1,#1
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;36     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  4608              MOV      r0,r1
000010  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;37     	/***************?TIM???????*****************/
;;;38     	TIM_TimeBaseStructure.TIM_Prescaler=0;  
000014  2000              MOVS     r0,#0
000016  f8ad0010          STRH     r0,[sp,#0x10]
;;;39     	TIM_TimeBaseStructure.TIM_Period =PWM_Period;
00001a  f2413088          MOV      r0,#0x1388
00001e  f8ad0014          STRH     r0,[sp,#0x14]
;;;40     	TIM_TimeBaseStructure.TIM_CounterMode=TIM_CounterMode_Up;
000022  2000              MOVS     r0,#0
000024  f8ad0012          STRH     r0,[sp,#0x12]
;;;41     	TIM_TimeBaseStructure.TIM_ClockDivision=0;
000028  f8ad0016          STRH     r0,[sp,#0x16]
;;;42     	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
00002c  a904              ADD      r1,sp,#0x10
00002e  f04f4080          MOV      r0,#0x40000000
000032  f7fffffe          BL       TIM_TimeBaseInit
;;;43     	/***********?TIM?OC??***************/
;;;44     	TIM_OCInitSturcture.TIM_OCMode = TIM_OCMode_PWM1;
000036  2060              MOVS     r0,#0x60
000038  f8ad0000          STRH     r0,[sp,#0]
;;;45       TIM_OCInitSturcture.TIM_OutputState = TIM_OutputState_Enable;
00003c  2001              MOVS     r0,#1
00003e  f8ad0002          STRH     r0,[sp,#2]
;;;46       TIM_OCInitSturcture.TIM_Pulse =1;
000042  f8ad0006          STRH     r0,[sp,#6]
;;;47       TIM_OCInitSturcture.TIM_OCPolarity = TIM_OCPolarity_High;
000046  2000              MOVS     r0,#0
000048  f8ad0008          STRH     r0,[sp,#8]
;;;48     
;;;49     //	TIM_OC2Init(TIM2, &TIM_OCInitSturcture);
;;;50     	TIM_OC3Init(TIM2, &TIM_OCInitSturcture);
00004c  4669              MOV      r1,sp
00004e  f04f4080          MOV      r0,#0x40000000
000052  f7fffffe          BL       TIM_OC3Init
;;;51     	TIM_OC4Init(TIM2, &TIM_OCInitSturcture);
000056  4669              MOV      r1,sp
000058  f04f4080          MOV      r0,#0x40000000
00005c  f7fffffe          BL       TIM_OC4Init
;;;52     	/***********??************/
;;;53     	TIM_CtrlPWMOutputs(TIM2,ENABLE);          
000060  2101              MOVS     r1,#1
000062  0788              LSLS     r0,r1,#30
000064  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;54     	TIM_Cmd(TIM2, ENABLE);	
000068  2101              MOVS     r1,#1
00006a  0788              LSLS     r0,r1,#30
00006c  f7fffffe          BL       TIM_Cmd
;;;55     }
000070  b007              ADD      sp,sp,#0x1c
000072  bd00              POP      {pc}
;;;56     
                          ENDP


                          AREA ||i.PWM_GPIO_Config||, CODE, READONLY, ALIGN=2

                  PWM_GPIO_Config PROC
;;;9      *************************************************************************/
;;;10     void PWM_GPIO_Config()
000000  b508              PUSH     {r3,lr}
;;;11     {
;;;12     /**************PA0????**************/
;;;13       GPIO_InitTypeDef GPIO_InitStruct;
;;;14       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);  
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;15     	GPIO_InitStruct.GPIO_Pin=GPIO_Pin_1;
00000a  2002              MOVS     r0,#2
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;16     	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;//?????????
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;17       GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;18     	GPIO_Init(GPIOA,&GPIO_InitStruct);
00001c  4669              MOV      r1,sp
00001e  480a              LDR      r0,|L4.72|
000020  f7fffffe          BL       GPIO_Init
;;;19     		GPIO_SetBits(GPIOA,GPIO_Pin_1);
000024  2102              MOVS     r1,#2
000026  4808              LDR      r0,|L4.72|
000028  f7fffffe          BL       GPIO_SetBits
;;;20     	
;;;21     	GPIO_InitStruct.GPIO_Pin=GPIO_Pin_2|GPIO_Pin_3;
00002c  200c              MOVS     r0,#0xc
00002e  f8ad0000          STRH     r0,[sp,#0]
;;;22     	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;//?????????
000032  2018              MOVS     r0,#0x18
000034  f88d0003          STRB     r0,[sp,#3]
;;;23       GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
000038  2003              MOVS     r0,#3
00003a  f88d0002          STRB     r0,[sp,#2]
;;;24     	GPIO_Init(GPIOA,&GPIO_InitStruct);
00003e  4669              MOV      r1,sp
000040  4801              LDR      r0,|L4.72|
000042  f7fffffe          BL       GPIO_Init
;;;25     
;;;26     //	GPIO_ResetBits(GPIOA,GPIO_Pin_3);
;;;27     //	GPIO_ResetBits(GPIOA,GPIO_Pin_2);
;;;28     }
000046  bd08              POP      {r3,pc}
;;;29     void PWM_Configuration()
                          ENDP

                  |L4.72|
                          DCD      0x40010800

                          AREA ||i.SetMotorVoltage||, CODE, READONLY, ALIGN=2

                  SetMotorVoltage PROC
;;;91     //}
;;;92     void SetMotorVoltage(float f_tVal)
000000  b570              PUSH     {r4-r6,lr}
;;;93     {
000002  4604              MOV      r4,r0
;;;94     	
;;;95     	if(f_tVal>0)
000004  2100              MOVS     r1,#0
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       __aeabi_cfrcmple
00000c  d209              BCS      |L5.34|
;;;96     	{		
;;;97     	TIM2->CCR3=f_tVal;
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       __aeabi_f2uiz
000014  f04f4180          MOV      r1,#0x40000000
000018  8788              STRH     r0,[r1,#0x3c]
;;;98       TIM2->CCR4=0;
00001a  2000              MOVS     r0,#0
00001c  4906              LDR      r1,|L5.56|
00001e  8008              STRH     r0,[r1,#0]
000020  e009              B        |L5.54|
                  |L5.34|
;;;99     	}
;;;100    	else
;;;101    	{
;;;102    	TIM2->CCR4=-f_tVal;
000022  f0844500          EOR      r5,r4,#0x80000000
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       __aeabi_f2uiz
00002c  4902              LDR      r1,|L5.56|
00002e  8008              STRH     r0,[r1,#0]
;;;103    	TIM2->CCR3=0;
000030  2000              MOVS     r0,#0
000032  0609              LSLS     r1,r1,#24
000034  8788              STRH     r0,[r1,#0x3c]
                  |L5.54|
;;;104    	}
;;;105    
;;;106    }
000036  bd70              POP      {r4-r6,pc}
;;;107    /******************************************************************************
                          ENDP

                  |L5.56|
                          DCD      0x40000040
