; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\tim2.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\tim2.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Mylib -I..\Libraries -I..\CM3 -I..\User -I..\User\debug -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\tim2.crf ..\Mylib\tim2.c]
                          THUMB

                          AREA ||i.TIM4_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM4_IRQHandler PROC
;;;30     
;;;31     void TIM4_IRQHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;32     {
;;;33     	
;;;34         if (TIM_GetITStatus(TIM4,TIM_IT_Update)!= RESET) 
000002  2101              MOVS     r1,#1
000004  482b              LDR      r0,|L1.180|
000006  f7fffffe          BL       TIM_GetITStatus
00000a  2800              CMP      r0,#0
00000c  d050              BEQ      |L1.176|
;;;35     	{
;;;36     		static float out_pwm,AD_out_pwm;
;;;37             TIM_ClearITPendingBit(TIM4,TIM_IT_Update);
00000e  2101              MOVS     r1,#1
000010  4828              LDR      r0,|L1.180|
000012  f7fffffe          BL       TIM_ClearITPendingBit
;;;38             Moto_Drive.power=AD_Power();
000016  f7fffffe          BL       AD_Power
00001a  4927              LDR      r1,|L1.184|
00001c  61c8              STR      r0,[r1,#0x1c]  ; Moto_Drive
;;;39             
;;;40             Moto_Drive.Measured_Speed=Encoder_Get_CNT()*Moto_Drive.Encoder_Dir;
00001e  f7fffffe          BL       Encoder_Get_CNT
000022  4605              MOV      r5,r0
000024  f7fffffe          BL       __aeabi_i2f
000028  4604              MOV      r4,r0
00002a  4823              LDR      r0,|L1.184|
00002c  6841              LDR      r1,[r0,#4]  ; Moto_Drive
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       __aeabi_fmul
000034  4920              LDR      r1,|L1.184|
000036  6188              STR      r0,[r1,#0x18]  ; Moto_Drive
;;;41             if(Moto_Drive.power>Moto_Drive.limit_power)
000038  460a              MOV      r2,r1
00003a  6a11              LDR      r1,[r2,#0x20]  ; Moto_Drive
00003c  69d0              LDR      r0,[r2,#0x1c]  ; Moto_Drive
00003e  f7fffffe          BL       __aeabi_cfrcmple
000042  d208              BCS      |L1.86|
;;;42             AD_out_pwm=PID_Calculate(&PID_Moto_Drive,Moto_Drive.power,Moto_Drive.limit_power);
000044  481c              LDR      r0,|L1.184|
000046  6a02              LDR      r2,[r0,#0x20]  ; Moto_Drive
000048  69c1              LDR      r1,[r0,#0x1c]  ; Moto_Drive
00004a  481c              LDR      r0,|L1.188|
00004c  f7fffffe          BL       PID_Calculate
000050  491b              LDR      r1,|L1.192|
000052  6008              STR      r0,[r1,#0]  ; AD_out_pwm
000054  e004              B        |L1.96|
                  |L1.86|
;;;43             else
;;;44             {
;;;45             AD_out_pwm=0;
000056  2000              MOVS     r0,#0
000058  4919              LDR      r1,|L1.192|
00005a  6008              STR      r0,[r1,#0]  ; AD_out_pwm
;;;46             PID_Moto_Drive.SumErr=0;
00005c  4917              LDR      r1,|L1.188|
00005e  6108              STR      r0,[r1,#0x10]  ; PID_Moto_Drive
                  |L1.96|
;;;47             }
;;;48             
;;;49     	    out_pwm=PID_Calculate(&PID_Moto_Drive,Moto_Drive.Measured_Speed,Moto_Drive.Speed_Value);
000060  4815              LDR      r0,|L1.184|
000062  6902              LDR      r2,[r0,#0x10]  ; Moto_Drive
000064  6981              LDR      r1,[r0,#0x18]  ; Moto_Drive
000066  4815              LDR      r0,|L1.188|
000068  f7fffffe          BL       PID_Calculate
00006c  4915              LDR      r1,|L1.196|
00006e  6008              STR      r0,[r1,#0]  ; out_pwm
;;;50             if(out_pwm>0)
000070  2100              MOVS     r1,#0
000072  4814              LDR      r0,|L1.196|
000074  6800              LDR      r0,[r0,#0]  ; out_pwm
000076  f7fffffe          BL       __aeabi_cfrcmple
00007a  d208              BCS      |L1.142|
;;;51              out_pwm+=AD_out_pwm;
00007c  4810              LDR      r0,|L1.192|
00007e  6801              LDR      r1,[r0,#0]  ; AD_out_pwm
000080  4810              LDR      r0,|L1.196|
000082  6800              LDR      r0,[r0,#0]  ; out_pwm
000084  f7fffffe          BL       __aeabi_fadd
000088  490e              LDR      r1,|L1.196|
00008a  6008              STR      r0,[r1,#0]  ; out_pwm
00008c  e007              B        |L1.158|
                  |L1.142|
;;;52             else
;;;53              out_pwm-=AD_out_pwm;             
00008e  480c              LDR      r0,|L1.192|
000090  6801              LDR      r1,[r0,#0]  ; AD_out_pwm
000092  480c              LDR      r0,|L1.196|
000094  6800              LDR      r0,[r0,#0]  ; out_pwm
000096  f7fffffe          BL       __aeabi_fsub
00009a  490a              LDR      r1,|L1.196|
00009c  6008              STR      r0,[r1,#0]  ; out_pwm
                  |L1.158|
;;;54             MotorSpeedOut(out_pwm*Moto_Drive.Moto_Dir);
00009e  4806              LDR      r0,|L1.184|
0000a0  6881              LDR      r1,[r0,#8]  ; Moto_Drive
0000a2  4808              LDR      r0,|L1.196|
0000a4  6800              LDR      r0,[r0,#0]  ; out_pwm
0000a6  f7fffffe          BL       __aeabi_fmul
0000aa  4604              MOV      r4,r0
0000ac  f7fffffe          BL       MotorSpeedOut
                  |L1.176|
;;;55       } 
;;;56     }
0000b0  bd70              POP      {r4-r6,pc}
;;;57     
                          ENDP

0000b2  0000              DCW      0x0000
                  |L1.180|
                          DCD      0x40000800
                  |L1.184|
                          DCD      Moto_Drive
                  |L1.188|
                          DCD      PID_Moto_Drive
                  |L1.192|
                          DCD      AD_out_pwm
                  |L1.196|
                          DCD      out_pwm

                          AREA ||i.TIM4_Init||, CODE, READONLY, ALIGN=2

                  TIM4_Init PROC
;;;27     #endif
;;;2      void TIM4_Init()
000000  b51f              PUSH     {r0-r4,lr}
;;;3      {
;;;4      	TIM_TimeBaseInitTypeDef  TIM_InitStructure;
;;;5        NVIC_InitTypeDef	       NVIC_InitStructure;
;;;6        /* Enable AFIO clock */
;;;7        RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;8      	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
00000a  2101              MOVS     r1,#1
00000c  2004              MOVS     r0,#4
00000e  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;9      	
;;;10     	TIM_DeInit(TIM4);
000012  481a              LDR      r0,|L2.124|
000014  f7fffffe          BL       TIM_DeInit
;;;11     	TIM_InitStructure.TIM_Prescaler =72-1;//72分频
000018  2047              MOVS     r0,#0x47
00001a  f8ad0004          STRH     r0,[sp,#4]
;;;12     	TIM_InitStructure.TIM_Period =1000-1;     //重复计数器值
00001e  f24030e7          MOV      r0,#0x3e7
000022  f8ad0008          STRH     r0,[sp,#8]
;;;13     	TIM_InitStructure.TIM_CounterMode=TIM_CounterMode_Up;
000026  2000              MOVS     r0,#0
000028  f8ad0006          STRH     r0,[sp,#6]
;;;14     	TIM_InitStructure.TIM_ClockDivision=TIM_CKD_DIV4;
00002c  f44f7000          MOV      r0,#0x200
000030  f8ad000a          STRH     r0,[sp,#0xa]
;;;15     	TIM_InitStructure.TIM_RepetitionCounter=0;
000034  2000              MOVS     r0,#0
000036  f88d000c          STRB     r0,[sp,#0xc]
;;;16     	TIM_TimeBaseInit(TIM4,&TIM_InitStructure);
00003a  a901              ADD      r1,sp,#4
00003c  480f              LDR      r0,|L2.124|
00003e  f7fffffe          BL       TIM_TimeBaseInit
;;;17     
;;;18     	TIM_ClearFlag(TIM4, TIM_FLAG_Update);
000042  2101              MOVS     r1,#1
000044  480d              LDR      r0,|L2.124|
000046  f7fffffe          BL       TIM_ClearFlag
;;;19     	TIM_ITConfig(TIM4,TIM_IT_Update,ENABLE);//更新中断
00004a  2201              MOVS     r2,#1
00004c  4611              MOV      r1,r2
00004e  480b              LDR      r0,|L2.124|
000050  f7fffffe          BL       TIM_ITConfig
;;;20     		
;;;21     	/* Enable and set EXTI0 Interrupt to the lowest priority */
;;;22     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
000054  f44f60a0          MOV      r0,#0x500
000058  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;23       NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;
00005c  201e              MOVS     r0,#0x1e
00005e  f88d0000          STRB     r0,[sp,#0]
;;;24       NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority =0;
000062  2000              MOVS     r0,#0
000064  f88d0001          STRB     r0,[sp,#1]
;;;25       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000068  f88d0002          STRB     r0,[sp,#2]
;;;26       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00006c  2001              MOVS     r0,#1
00006e  f88d0003          STRB     r0,[sp,#3]
;;;27       NVIC_Init(&NVIC_InitStructure);
000072  4668              MOV      r0,sp
000074  f7fffffe          BL       NVIC_Init
;;;28     	
;;;29     }
000078  bd1f              POP      {r0-r4,pc}
;;;30     
                          ENDP

00007a  0000              DCW      0x0000
                  |L2.124|
                          DCD      0x40000800

                          AREA ||.data||, DATA, ALIGN=2

                  out_pwm
                          DCD      0x00000000
                  AD_out_pwm
                          DCD      0x00000000
