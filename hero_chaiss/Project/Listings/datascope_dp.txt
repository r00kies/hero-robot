; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\datascope_dp.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\datascope_dp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Mylib -I..\Libraries -I..\CM3 -I..\User -I..\User\debug -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\datascope_dp.crf ..\User\debug\DataScope_DP.C]
                          THUMB

                          AREA ||i.DataScope_Data_Generate||, CODE, READONLY, ALIGN=2

                  DataScope_Data_Generate PROC
;;;53     //返回0表示帧格式生成失败 
;;;54     unsigned char DataScope_Data_Generate(unsigned char Channel_Number)
000000  4601              MOV      r1,r0
;;;55     {
;;;56     	if ( (Channel_Number > 10) || (Channel_Number == 0) ) { return 0; }  //通道个数大于10或等于0，直接跳出，不执行函数
000002  290a              CMP      r1,#0xa
000004  dc00              BGT      |L1.8|
000006  b909              CBNZ     r1,|L1.12|
                  |L1.8|
000008  2000              MOVS     r0,#0
                  |L1.10|
;;;57       else
;;;58       {	
;;;59     	 DataScope_OutPut_Buffer[0] = '$';  //帧头
;;;60     		
;;;61     	 switch(Channel_Number)   
;;;62        { 
;;;63     		 case 1:   DataScope_OutPut_Buffer[5]  =  5; return  6; break;   
;;;64     		 case 2:   DataScope_OutPut_Buffer[9]  =  9; return 10; break;
;;;65     		 case 3:   DataScope_OutPut_Buffer[13] = 13; return 14; break;
;;;66     		 case 4:   DataScope_OutPut_Buffer[17] = 17; return 18; break;
;;;67     		 case 5:   DataScope_OutPut_Buffer[21] = 21; return 22; break; 
;;;68     		 case 6:   DataScope_OutPut_Buffer[25] = 25; return 26; break;
;;;69     		 case 7:   DataScope_OutPut_Buffer[29] = 29; return 30; break;
;;;70     		 case 8:   DataScope_OutPut_Buffer[33] = 33; return 34; break;
;;;71     		 case 9:   DataScope_OutPut_Buffer[37] = 37; return 38; break;
;;;72          case 10:  DataScope_OutPut_Buffer[41] = 41; return 42; break;
;;;73        }	 
;;;74       }
;;;75     	return 0;
;;;76     }
00000a  4770              BX       lr
                  |L1.12|
00000c  2024              MOVS     r0,#0x24              ;59
00000e  4a22              LDR      r2,|L1.152|
000010  7010              STRB     r0,[r2,#0]            ;59
000012  290b              CMP      r1,#0xb               ;61
000014  d23c              BCS      |L1.144|
000016  e8dff001          TBB      [pc,r1]               ;61
00001a  3b06              DCB      0x3b,0x06
00001c  0b10151a          DCB      0x0b,0x10,0x15,0x1a
000020  1f24292f          DCB      0x1f,0x24,0x29,0x2f
000024  3500              DCB      0x35,0x00
000026  2005              MOVS     r0,#5                 ;63
000028  4a1b              LDR      r2,|L1.152|
00002a  7150              STRB     r0,[r2,#5]            ;63
00002c  2006              MOVS     r0,#6                 ;63
00002e  e7ec              B        |L1.10|
000030  2009              MOVS     r0,#9                 ;64
000032  4a19              LDR      r2,|L1.152|
000034  7250              STRB     r0,[r2,#9]            ;64
000036  200a              MOVS     r0,#0xa               ;64
000038  e7e7              B        |L1.10|
00003a  200d              MOVS     r0,#0xd               ;65
00003c  4a16              LDR      r2,|L1.152|
00003e  7350              STRB     r0,[r2,#0xd]          ;65
000040  200e              MOVS     r0,#0xe               ;65
000042  e7e2              B        |L1.10|
000044  2011              MOVS     r0,#0x11              ;66
000046  4a14              LDR      r2,|L1.152|
000048  7450              STRB     r0,[r2,#0x11]         ;66
00004a  2012              MOVS     r0,#0x12              ;66
00004c  e7dd              B        |L1.10|
00004e  2015              MOVS     r0,#0x15              ;67
000050  4a11              LDR      r2,|L1.152|
000052  7550              STRB     r0,[r2,#0x15]         ;67
000054  2016              MOVS     r0,#0x16              ;67
000056  e7d8              B        |L1.10|
000058  2019              MOVS     r0,#0x19              ;68
00005a  4a0f              LDR      r2,|L1.152|
00005c  7650              STRB     r0,[r2,#0x19]         ;68
00005e  201a              MOVS     r0,#0x1a              ;68
000060  e7d3              B        |L1.10|
000062  201d              MOVS     r0,#0x1d              ;69
000064  4a0c              LDR      r2,|L1.152|
000066  7750              STRB     r0,[r2,#0x1d]         ;69
000068  201e              MOVS     r0,#0x1e              ;69
00006a  e7ce              B        |L1.10|
00006c  2021              MOVS     r0,#0x21              ;70
00006e  4a0a              LDR      r2,|L1.152|
000070  f8820021          STRB     r0,[r2,#0x21]         ;70
000074  2022              MOVS     r0,#0x22              ;70
000076  e7c8              B        |L1.10|
000078  2025              MOVS     r0,#0x25              ;71
00007a  4a07              LDR      r2,|L1.152|
00007c  f8820025          STRB     r0,[r2,#0x25]         ;71
000080  2026              MOVS     r0,#0x26              ;71
000082  e7c2              B        |L1.10|
000084  2029              MOVS     r0,#0x29              ;72
000086  4a04              LDR      r2,|L1.152|
000088  f8820029          STRB     r0,[r2,#0x29]         ;72
00008c  202a              MOVS     r0,#0x2a              ;72
00008e  e7bc              B        |L1.10|
                  |L1.144|
000090  bf00              NOP                            ;63
000092  2000              MOVS     r0,#0                 ;75
000094  e7b9              B        |L1.10|
;;;77     
                          ENDP

000096  0000              DCW      0x0000
                  |L1.152|
                          DCD      DataScope_OutPut_Buffer

                          AREA ||i.DataScope_Get_Channel_Data||, CODE, READONLY, ALIGN=2

                  DataScope_Get_Channel_Data PROC
;;;27     //函数无返回 
;;;28     void DataScope_Get_Channel_Data(float Data,unsigned char Channel)
000000  b513              PUSH     {r0,r1,r4,lr}
;;;29     {
000002  460c              MOV      r4,r1
;;;30     	if ( (Channel > 10) || (Channel == 0) ) return;  //通道个数大于10或等于0，直接跳出，不执行函数
000004  2c0a              CMP      r4,#0xa
000006  dc00              BGT      |L2.10|
000008  b904              CBNZ     r4,|L2.12|
                  |L2.10|
;;;31       else
;;;32       {
;;;33          switch (Channel)
;;;34     		{
;;;35           case 1:  Float2Byte(&Data,DataScope_OutPut_Buffer,1); break;
;;;36           case 2:  Float2Byte(&Data,DataScope_OutPut_Buffer,5); break;
;;;37     		  case 3:  Float2Byte(&Data,DataScope_OutPut_Buffer,9); break;
;;;38     		  case 4:  Float2Byte(&Data,DataScope_OutPut_Buffer,13); break;
;;;39     		  case 5:  Float2Byte(&Data,DataScope_OutPut_Buffer,17); break;
;;;40     		  case 6:  Float2Byte(&Data,DataScope_OutPut_Buffer,21); break;
;;;41     		  case 7:  Float2Byte(&Data,DataScope_OutPut_Buffer,25); break;
;;;42     		  case 8:  Float2Byte(&Data,DataScope_OutPut_Buffer,29); break;
;;;43     		  case 9:  Float2Byte(&Data,DataScope_OutPut_Buffer,33); break;
;;;44     		  case 10: Float2Byte(&Data,DataScope_OutPut_Buffer,37); break;
;;;45     		}
;;;46       }	 
;;;47     }
00000a  bd1c              POP      {r2-r4,pc}
                  |L2.12|
00000c  2c0b              CMP      r4,#0xb               ;33
00000e  d243              BCS      |L2.152|
000010  e8dff004          TBB      [pc,r4]               ;33
000014  42060c12          DCB      0x42,0x06,0x0c,0x12
000018  181e242a          DCB      0x18,0x1e,0x24,0x2a
00001c  30363c00          DCB      0x30,0x36,0x3c,0x00
000020  2201              MOVS     r2,#1                 ;35
000022  491f              LDR      r1,|L2.160|
000024  4668              MOV      r0,sp                 ;35
000026  f7fffffe          BL       Float2Byte
00002a  e035              B        |L2.152|
00002c  2205              MOVS     r2,#5                 ;36
00002e  491c              LDR      r1,|L2.160|
000030  4668              MOV      r0,sp                 ;36
000032  f7fffffe          BL       Float2Byte
000036  e02f              B        |L2.152|
000038  2209              MOVS     r2,#9                 ;37
00003a  4919              LDR      r1,|L2.160|
00003c  4668              MOV      r0,sp                 ;37
00003e  f7fffffe          BL       Float2Byte
000042  e029              B        |L2.152|
000044  220d              MOVS     r2,#0xd               ;38
000046  4916              LDR      r1,|L2.160|
000048  4668              MOV      r0,sp                 ;38
00004a  f7fffffe          BL       Float2Byte
00004e  e023              B        |L2.152|
000050  2211              MOVS     r2,#0x11              ;39
000052  4913              LDR      r1,|L2.160|
000054  4668              MOV      r0,sp                 ;39
000056  f7fffffe          BL       Float2Byte
00005a  e01d              B        |L2.152|
00005c  2215              MOVS     r2,#0x15              ;40
00005e  4910              LDR      r1,|L2.160|
000060  4668              MOV      r0,sp                 ;40
000062  f7fffffe          BL       Float2Byte
000066  e017              B        |L2.152|
000068  2219              MOVS     r2,#0x19              ;41
00006a  490d              LDR      r1,|L2.160|
00006c  4668              MOV      r0,sp                 ;41
00006e  f7fffffe          BL       Float2Byte
000072  e011              B        |L2.152|
000074  221d              MOVS     r2,#0x1d              ;42
000076  490a              LDR      r1,|L2.160|
000078  4668              MOV      r0,sp                 ;42
00007a  f7fffffe          BL       Float2Byte
00007e  e00b              B        |L2.152|
000080  2221              MOVS     r2,#0x21              ;43
000082  4907              LDR      r1,|L2.160|
000084  4668              MOV      r0,sp                 ;43
000086  f7fffffe          BL       Float2Byte
00008a  e005              B        |L2.152|
00008c  2225              MOVS     r2,#0x25              ;44
00008e  4904              LDR      r1,|L2.160|
000090  4668              MOV      r0,sp                 ;44
000092  f7fffffe          BL       Float2Byte
000096  bf00              NOP                            ;44
                  |L2.152|
000098  bf00              NOP                            ;35
00009a  bf00              NOP      
00009c  e7b5              B        |L2.10|
;;;48     
                          ENDP

00009e  0000              DCW      0x0000
                  |L2.160|
                          DCD      DataScope_OutPut_Buffer

                          AREA ||i.DataScope_Output||, CODE, READONLY, ALIGN=2

                  DataScope_Output PROC
;;;78     
;;;79     void DataScope_Output(void)
000000  b500              PUSH     {lr}
;;;80     {
;;;81     			DataScope_Get_Channel_Data( g_speed, 1 ); //将数据 1.0  写入通道 1
000002  2101              MOVS     r1,#1
000004  481f              LDR      r0,|L3.132|
000006  6800              LDR      r0,[r0,#0]  ; g_speed
000008  f7fffffe          BL       DataScope_Get_Channel_Data
;;;82           DataScope_Get_Channel_Data( KP , 2 ); //将数据 2.0  写入通道 2
00000c  2102              MOVS     r1,#2
00000e  481e              LDR      r0,|L3.136|
000010  6800              LDR      r0,[r0,#0]  ; KP
000012  f7fffffe          BL       DataScope_Get_Channel_Data
;;;83           DataScope_Get_Channel_Data( KI , 3 ); //将数据 3.0  写入通道 3
000016  2103              MOVS     r1,#3
000018  481c              LDR      r0,|L3.140|
00001a  6800              LDR      r0,[r0,#0]  ; KI
00001c  f7fffffe          BL       DataScope_Get_Channel_Data
;;;84           DataScope_Get_Channel_Data( KD , 4 ); //将数据 4.0  写入通道 4
000020  2104              MOVS     r1,#4
000022  481b              LDR      r0,|L3.144|
000024  6800              LDR      r0,[r0,#0]  ; KD
000026  f7fffffe          BL       DataScope_Get_Channel_Data
;;;85     		  DataScope_Get_Channel_Data( g_adc_val, 5 ); //将数据 5.0  写入通道 5
00002a  2105              MOVS     r1,#5
00002c  4819              LDR      r0,|L3.148|
00002e  6800              LDR      r0,[r0,#0]  ; g_adc_val
000030  f7fffffe          BL       DataScope_Get_Channel_Data
;;;86           DataScope_Get_Channel_Data( g_set_speed , 6 ); //将数据 6.0  写入通道 6
000034  2106              MOVS     r1,#6
000036  4818              LDR      r0,|L3.152|
000038  6800              LDR      r0,[r0,#0]  ; g_set_speed
00003a  f7fffffe          BL       DataScope_Get_Channel_Data
;;;87     //			DataScope_Get_Channel_Data( 7.0 , 7 ); //将数据 7.0  写入通道 7
;;;88     //      DataScope_Get_Channel_Data( 8.0 , 8 ); //将数据 8.0  写入通道 8
;;;89     //			DataScope_Get_Channel_Data( 9.0 , 9 ); //将数据 9.0  写入通道 9
;;;90     //      DataScope_Get_Channel_Data( 10.0 , 10); //将数据 10.0 写入通道 10
;;;91     //      printf("%s",DataScope_OutPut_Buffer);
;;;92     	  	Send_Count = DataScope_Data_Generate(6); //生成10个通道的 格式化帧数据，返回帧数据长度
00003e  2006              MOVS     r0,#6
000040  f7fffffe          BL       DataScope_Data_Generate
000044  4915              LDR      r1,|L3.156|
000046  7008              STRB     r0,[r1,#0]
;;;93     		
;;;94     		  for( i = 0 ; i < Send_Count; i++)  //循环发送,直到发送完毕   
000048  2000              MOVS     r0,#0
00004a  4915              LDR      r1,|L3.160|
00004c  7008              STRB     r0,[r1,#0]
00004e  e012              B        |L3.118|
                  |L3.80|
;;;95     	 	  {
;;;96     		    while((USART2->SR&0X40)==0);  
000050  bf00              NOP      
                  |L3.82|
000052  4814              LDR      r0,|L3.164|
000054  8800              LDRH     r0,[r0,#0]
000056  f0000040          AND      r0,r0,#0x40
00005a  2800              CMP      r0,#0
00005c  d0f9              BEQ      |L3.82|
;;;97       	    USART2->DR = DataScope_OutPut_Buffer[i]; //从串口丢一个字节数据出去      
00005e  4812              LDR      r0,|L3.168|
000060  490f              LDR      r1,|L3.160|
000062  7809              LDRB     r1,[r1,#0]  ; i
000064  5c40              LDRB     r0,[r0,r1]
000066  490f              LDR      r1,|L3.164|
000068  1d09              ADDS     r1,r1,#4
00006a  8008              STRH     r0,[r1,#0]
00006c  480c              LDR      r0,|L3.160|
00006e  7800              LDRB     r0,[r0,#0]            ;94  ; i
000070  1c40              ADDS     r0,r0,#1              ;94
000072  490b              LDR      r1,|L3.160|
000074  7008              STRB     r0,[r1,#0]            ;94
                  |L3.118|
000076  480a              LDR      r0,|L3.160|
000078  7800              LDRB     r0,[r0,#0]            ;94  ; i
00007a  4908              LDR      r1,|L3.156|
00007c  7809              LDRB     r1,[r1,#0]            ;94  ; Send_Count
00007e  4288              CMP      r0,r1                 ;94
000080  dbe6              BLT      |L3.80|
;;;98     		  }
;;;99     }
000082  bd00              POP      {pc}
;;;100    
                          ENDP

                  |L3.132|
                          DCD      g_speed
                  |L3.136|
                          DCD      ||KP||
                  |L3.140|
                          DCD      ||KI||
                  |L3.144|
                          DCD      ||KD||
                  |L3.148|
                          DCD      g_adc_val
                  |L3.152|
                          DCD      g_set_speed
                  |L3.156|
                          DCD      Send_Count
                  |L3.160|
                          DCD      i
                  |L3.164|
                          DCD      0x40004400
                  |L3.168|
                          DCD      DataScope_OutPut_Buffer

                          AREA ||i.Float2Byte||, CODE, READONLY, ALIGN=1

                  Float2Byte PROC
;;;12     //函数无返回 
;;;13     void Float2Byte(float *target,unsigned char *buf,unsigned char beg)
000000  b530              PUSH     {r4,r5,lr}
;;;14     {
;;;15         unsigned char *point;
;;;16         point = (unsigned char*)target;	  //得到float的地址
000002  4603              MOV      r3,r0
;;;17         buf[beg]   = point[0];
000004  781c              LDRB     r4,[r3,#0]
000006  548c              STRB     r4,[r1,r2]
;;;18         buf[beg+1] = point[1];
000008  785d              LDRB     r5,[r3,#1]
00000a  1c54              ADDS     r4,r2,#1
00000c  550d              STRB     r5,[r1,r4]
;;;19         buf[beg+2] = point[2];
00000e  789d              LDRB     r5,[r3,#2]
000010  1c94              ADDS     r4,r2,#2
000012  550d              STRB     r5,[r1,r4]
;;;20         buf[beg+3] = point[3];
000014  78dd              LDRB     r5,[r3,#3]
000016  1cd4              ADDS     r4,r2,#3
000018  550d              STRB     r5,[r1,r4]
;;;21     }
00001a  bd30              POP      {r4,r5,pc}
;;;22      
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  DataScope_OutPut_Buffer
                          %        42

                          AREA ||.data||, DATA, ALIGN=2

                  i
000000  00                DCB      0x00
                  Send_Count
000001  000000            DCB      0x00,0x00,0x00
                  ||KP||
                          DCD      0x00000000
                  ||KI||
                          DCD      0x00000000
                  ||KD||
                          DCD      0x00000000
                  g_speed
                          DCD      0x00000000
                  g_adc_val
                          DCD      0x00000000
                  g_set_speed
                          DCD      0x00000000
