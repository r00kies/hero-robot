; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\stm32f10x_it.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Mylib -I..\Libraries -I..\CM3 -I..\User -I..\User\debug -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\stm32f10x_it.crf ..\User\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;91     *******************************************************************************/
;;;92     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;93     {
;;;94       /* Go to infinite loop when Bus Fault exception occurs */
;;;95       while (1)
000002  e7fe              B        |L1.2|
;;;96       {
;;;97       }
;;;98     }
;;;99     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;132    *******************************************************************************/
;;;133    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;134    {
;;;135    }
;;;136    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;61     *******************************************************************************/
;;;62     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L3.2|
;;;63     {
;;;64       /* Go to infinite loop when Hard Fault exception occurs */
;;;65       while (1)
000002  e7fe              B        |L3.2|
;;;66       {
;;;67       }
;;;68     }
;;;69     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;76     *******************************************************************************/
;;;77     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;78     {
;;;79       /* Go to infinite loop when Memory Manage exception occurs */
;;;80       while (1)
000002  e7fe              B        |L4.2|
;;;81       {
;;;82       }
;;;83     }
;;;84     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;50     *******************************************************************************/
;;;51     void NMI_Handler(void)
000000  4770              BX       lr
;;;52     {
;;;53     }
;;;54     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;143    *******************************************************************************/
;;;144    void PendSV_Handler(void)
000000  4770              BX       lr
;;;145    {
;;;146    }
;;;147    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;121    *******************************************************************************/
;;;122    void SVC_Handler(void)
000000  4770              BX       lr
;;;123    {
;;;124    }
;;;125    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=2

                  SysTick_Handler PROC
;;;154    *******************************************************************************/
;;;155    void SysTick_Handler(void)
000000  4820              LDR      r0,|L8.132|
;;;156    {
;;;157      if(SystemInitReady == 1)
000002  7800              LDRB     r0,[r0,#0]  ; SystemInitReady
000004  2801              CMP      r0,#1
000006  d13c              BNE      |L8.130|
;;;158      {
;;;159        SystemCounter++;
000008  481f              LDR      r0,|L8.136|
00000a  8800              LDRH     r0,[r0,#0]  ; SystemCounter
00000c  1c40              ADDS     r0,r0,#1
00000e  491e              LDR      r1,|L8.136|
000010  8008              STRH     r0,[r1,#0]
;;;160        if(SystemCounter > SYSTEM_COUNT)
000012  4608              MOV      r0,r1
000014  8800              LDRH     r0,[r0,#0]  ; SystemCounter
000016  f5b07ffa          CMP      r0,#0x1f4
00001a  dd01              BLE      |L8.32|
;;;161        {SystemCounter = 1;}
00001c  2001              MOVS     r0,#1
00001e  8008              STRH     r0,[r1,#0]
                  |L8.32|
;;;162    		
;;;163        if((SystemCounter % COUNT_1000HZ) == 0)	   
000020  bf00              NOP      
;;;164        {Moto_pid_1000Hz = 1;}
000022  2001              MOVS     r0,#1
000024  4919              LDR      r1,|L8.140|
000026  7008              STRB     r0,[r1,#0]
;;;165    		
;;;166        if((SystemCounter % COUNT_500HZ) == 0)	   
000028  4917              LDR      r1,|L8.136|
00002a  8808              LDRH     r0,[r1,#0]  ; SystemCounter
00002c  eb0071d0          ADD      r1,r0,r0,LSR #31
000030  1049              ASRS     r1,r1,#1
000032  eba00141          SUB      r1,r0,r1,LSL #1
000036  b911              CBNZ     r1,|L8.62|
;;;167        {Attitude_500Hz = 1;}
000038  2001              MOVS     r0,#1
00003a  4915              LDR      r1,|L8.144|
00003c  7008              STRB     r0,[r1,#0]
                  |L8.62|
;;;168    
;;;169        if((SystemCounter % COUNT_100HZ) == 0)
00003e  4812              LDR      r0,|L8.136|
000040  8800              LDRH     r0,[r0,#0]  ; SystemCounter
000042  210a              MOVS     r1,#0xa
000044  fb90f2f1          SDIV     r2,r0,r1
000048  fb010012          MLS      r0,r1,r2,r0
00004c  b910              CBNZ     r0,|L8.84|
;;;170        {Motor_100Hz = 1;}
00004e  2001              MOVS     r0,#1
000050  4910              LDR      r1,|L8.148|
000052  7008              STRB     r0,[r1,#0]
                  |L8.84|
;;;171    
;;;172    	  if((SystemCounter % COUNT_10HZ) == 0)
000054  480c              LDR      r0,|L8.136|
000056  8800              LDRH     r0,[r0,#0]  ; SystemCounter
000058  2164              MOVS     r1,#0x64
00005a  fb90f2f1          SDIV     r2,r0,r1
00005e  fb010012          MLS      r0,r1,r2,r0
000062  b910              CBNZ     r0,|L8.106|
;;;173      	{Com_10Hz = 1;}
000064  2001              MOVS     r0,#1
000066  490c              LDR      r1,|L8.152|
000068  7008              STRB     r0,[r1,#0]
                  |L8.106|
;;;174    		if((SystemCounter % COUNT_2HZ) == 0)
00006a  4807              LDR      r0,|L8.136|
00006c  8800              LDRH     r0,[r0,#0]  ; SystemCounter
00006e  f44f71fa          MOV      r1,#0x1f4
000072  fb90f2f1          SDIV     r2,r0,r1
000076  fb010012          MLS      r0,r1,r2,r0
00007a  b910              CBNZ     r0,|L8.130|
;;;175    	  {Set_2Hz = 1;} 
00007c  2001              MOVS     r0,#1
00007e  4907              LDR      r1,|L8.156|
000080  7008              STRB     r0,[r1,#0]
                  |L8.130|
;;;176    	
;;;177      }
;;;178    }
000082  4770              BX       lr
;;;179    
                          ENDP

                  |L8.132|
                          DCD      SystemInitReady
                  |L8.136|
                          DCD      SystemCounter
                  |L8.140|
                          DCD      Moto_pid_1000Hz
                  |L8.144|
                          DCD      Attitude_500Hz
                  |L8.148|
                          DCD      Motor_100Hz
                  |L8.152|
                          DCD      Com_10Hz
                  |L8.156|
                          DCD      Set_2Hz

                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;106    *******************************************************************************/
;;;107    void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L9.2|
;;;108    {
;;;109      /* Go to infinite loop when Usage Fault exception occurs */
;;;110      while (1)
000002  e7fe              B        |L9.2|
;;;111      {
;;;112      }
;;;113    }
;;;114    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=1

                  SystemCounter
000000  0000              DCW      0x0000
                  Moto_pid_1000Hz
000002  00                DCB      0x00
                  Attitude_500Hz
000003  00                DCB      0x00
                  Motor_100Hz
000004  00                DCB      0x00
                  Com_10Hz
000005  00                DCB      0x00
                  Set_2Hz
000006  00                DCB      0x00
                  SystemInitReady
000007  00                DCB      0x00
