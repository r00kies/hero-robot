; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\ad.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\ad.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Mylib -I..\Libraries -I..\CM3 -I..\User -I..\User\debug -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\ad.crf ..\Mylib\ad.c]
                          THUMB

                          AREA ||i.ADC_Configuration||, CODE, READONLY, ALIGN=2

                  ADC_Configuration PROC
;;;5      
;;;6      void ADC_Configuration(void)
000000  b500              PUSH     {lr}
;;;7      {
000002  b091              SUB      sp,sp,#0x44
;;;8          GPIO_InitTypeDef         gpio;
;;;9          ADC_InitTypeDef          adc;
;;;10         DMA_InitTypeDef          dma;
;;;11         
;;;12         RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);
000004  2101              MOVS     r1,#1
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;13         RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1 | RCC_APB2Periph_GPIOA, ENABLE); 
00000c  2101              MOVS     r1,#1
00000e  f44f7001          MOV      r0,#0x204
000012  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;14       
;;;15         gpio.GPIO_Pin = GPIO_Pin_0;
000016  2001              MOVS     r0,#1
000018  f8ad0040          STRH     r0,[sp,#0x40]
;;;16         gpio.GPIO_Mode = GPIO_Mode_AIN;
00001c  2000              MOVS     r0,#0
00001e  f88d0043          STRB     r0,[sp,#0x43]
;;;17         gpio.GPIO_Speed = GPIO_Speed_50MHz;
000022  2003              MOVS     r0,#3
000024  f88d0042          STRB     r0,[sp,#0x42]
;;;18         GPIO_Init(GPIOA,&gpio);
000028  a910              ADD      r1,sp,#0x40
00002a  4835              LDR      r0,|L1.256|
00002c  f7fffffe          BL       GPIO_Init
;;;19         
;;;20         DMA_DeInit(DMA1_Channel1);
000030  4834              LDR      r0,|L1.260|
000032  f7fffffe          BL       DMA_DeInit
;;;21         dma.DMA_PeripheralBaseAddr = ADC1_DR_Address;
000036  4834              LDR      r0,|L1.264|
000038  9000              STR      r0,[sp,#0]
;;;22         dma.DMA_MemoryBaseAddr = (u32)&ADC_ConvertedValue;
00003a  4834              LDR      r0,|L1.268|
00003c  9001              STR      r0,[sp,#4]
;;;23         dma.DMA_DIR = DMA_DIR_PeripheralSRC;
00003e  2000              MOVS     r0,#0
000040  9002              STR      r0,[sp,#8]
;;;24         dma.DMA_BufferSize = 128;
000042  2080              MOVS     r0,#0x80
000044  9003              STR      r0,[sp,#0xc]
;;;25         dma.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
000046  2000              MOVS     r0,#0
000048  9004              STR      r0,[sp,#0x10]
;;;26         dma.DMA_MemoryInc = DMA_MemoryInc_Enable;
00004a  2080              MOVS     r0,#0x80
00004c  9005              STR      r0,[sp,#0x14]
;;;27         dma.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
00004e  0040              LSLS     r0,r0,#1
000050  9006              STR      r0,[sp,#0x18]
;;;28         dma.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
000052  0080              LSLS     r0,r0,#2
000054  9007              STR      r0,[sp,#0x1c]
;;;29         dma.DMA_Mode = DMA_Mode_Circular;
000056  2020              MOVS     r0,#0x20
000058  9008              STR      r0,[sp,#0x20]
;;;30         dma.DMA_Priority = DMA_Priority_High;
00005a  0200              LSLS     r0,r0,#8
00005c  9009              STR      r0,[sp,#0x24]
;;;31         dma.DMA_M2M = DMA_M2M_Disable;
00005e  2000              MOVS     r0,#0
000060  900a              STR      r0,[sp,#0x28]
;;;32         DMA_Init(DMA1_Channel1, &dma);
000062  4669              MOV      r1,sp
000064  4827              LDR      r0,|L1.260|
000066  f7fffffe          BL       DMA_Init
;;;33         DMA_Cmd(DMA1_Channel1, ENABLE);
00006a  2101              MOVS     r1,#1
00006c  4825              LDR      r0,|L1.260|
00006e  f7fffffe          BL       DMA_Cmd
;;;34         
;;;35         adc.ADC_Mode = ADC_Mode_Independent;	             
000072  2000              MOVS     r0,#0
000074  900b              STR      r0,[sp,#0x2c]
;;;36         adc.ADC_ScanConvMode = DISABLE;			             
000076  f88d0030          STRB     r0,[sp,#0x30]
;;;37         adc.ADC_ContinuousConvMode = ENABLE;	               
00007a  2001              MOVS     r0,#1
00007c  f88d0031          STRB     r0,[sp,#0x31]
;;;38         adc.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;  
000080  f44f2060          MOV      r0,#0xe0000
000084  900d              STR      r0,[sp,#0x34]
;;;39         adc.ADC_DataAlign = ADC_DataAlign_Right;
000086  2000              MOVS     r0,#0
000088  900e              STR      r0,[sp,#0x38]
;;;40         adc.ADC_NbrOfChannel = 1;
00008a  2001              MOVS     r0,#1
00008c  f88d003c          STRB     r0,[sp,#0x3c]
;;;41         ADC_Init(ADC1, &adc);
000090  a90b              ADD      r1,sp,#0x2c
000092  481d              LDR      r0,|L1.264|
000094  384c              SUBS     r0,r0,#0x4c
000096  f7fffffe          BL       ADC_Init
;;;42         
;;;43         RCC_ADCCLKConfig(RCC_PCLK2_Div8);
00009a  f44f4040          MOV      r0,#0xc000
00009e  f7fffffe          BL       RCC_ADCCLKConfig
;;;44         ADC_RegularChannelConfig(ADC1, ADC_Channel_0, 1, ADC_SampleTime_28Cycles5);
0000a2  2303              MOVS     r3,#3
0000a4  2201              MOVS     r2,#1
0000a6  2100              MOVS     r1,#0
0000a8  4817              LDR      r0,|L1.264|
0000aa  384c              SUBS     r0,r0,#0x4c
0000ac  f7fffffe          BL       ADC_RegularChannelConfig
;;;45         ADC_DMACmd(ADC1, ENABLE);
0000b0  2101              MOVS     r1,#1
0000b2  4815              LDR      r0,|L1.264|
0000b4  384c              SUBS     r0,r0,#0x4c
0000b6  f7fffffe          BL       ADC_DMACmd
;;;46     
;;;47         ADC_Cmd(ADC1, ENABLE);
0000ba  2101              MOVS     r1,#1
0000bc  4812              LDR      r0,|L1.264|
0000be  384c              SUBS     r0,r0,#0x4c
0000c0  f7fffffe          BL       ADC_Cmd
;;;48       	ADC_ResetCalibration(ADC1);
0000c4  4810              LDR      r0,|L1.264|
0000c6  384c              SUBS     r0,r0,#0x4c
0000c8  f7fffffe          BL       ADC_ResetCalibration
;;;49         while(ADC_GetResetCalibrationStatus(ADC1));
0000cc  bf00              NOP      
                  |L1.206|
0000ce  480e              LDR      r0,|L1.264|
0000d0  384c              SUBS     r0,r0,#0x4c
0000d2  f7fffffe          BL       ADC_GetResetCalibrationStatus
0000d6  2800              CMP      r0,#0
0000d8  d1f9              BNE      |L1.206|
;;;50         ADC_StartCalibration(ADC1);
0000da  480b              LDR      r0,|L1.264|
0000dc  384c              SUBS     r0,r0,#0x4c
0000de  f7fffffe          BL       ADC_StartCalibration
;;;51         while(ADC_GetCalibrationStatus(ADC1));
0000e2  bf00              NOP      
                  |L1.228|
0000e4  4808              LDR      r0,|L1.264|
0000e6  384c              SUBS     r0,r0,#0x4c
0000e8  f7fffffe          BL       ADC_GetCalibrationStatus
0000ec  2800              CMP      r0,#0
0000ee  d1f9              BNE      |L1.228|
;;;52         ADC_SoftwareStartConvCmd(ADC1, ENABLE);
0000f0  2101              MOVS     r1,#1
0000f2  4805              LDR      r0,|L1.264|
0000f4  384c              SUBS     r0,r0,#0x4c
0000f6  f7fffffe          BL       ADC_SoftwareStartConvCmd
;;;53     }
0000fa  b011              ADD      sp,sp,#0x44
0000fc  bd00              POP      {pc}
;;;54     
                          ENDP

0000fe  0000              DCW      0x0000
                  |L1.256|
                          DCD      0x40010800
                  |L1.260|
                          DCD      0x40020008
                  |L1.264|
                          DCD      0x4001244c
                  |L1.268|
                          DCD      ADC_ConvertedValue

                          AREA ||i.ADC_Filter||, CODE, READONLY, ALIGN=2

                  ADC_Filter PROC
;;;54     
;;;55     int ADC_Filter(void)
000000  2000              MOVS     r0,#0
;;;56     {
;;;57         int sum = 0;
;;;58         int adc_i = 0;
000002  2100              MOVS     r1,#0
;;;59         
;;;60         for(adc_i=0;adc_i<128;adc_i++)
000004  bf00              NOP      
000006  e004              B        |L2.18|
                  |L2.8|
;;;61         {
;;;62             sum += ADC_ConvertedValue[adc_i];
000008  4a04              LDR      r2,|L2.28|
00000a  f8322011          LDRH     r2,[r2,r1,LSL #1]
00000e  4410              ADD      r0,r0,r2
000010  1c49              ADDS     r1,r1,#1              ;60
                  |L2.18|
000012  2980              CMP      r1,#0x80              ;60
000014  dbf8              BLT      |L2.8|
;;;63         }
;;;64         sum >>=7;
000016  11c0              ASRS     r0,r0,#7
;;;65         
;;;66         return sum;
;;;67     }
000018  4770              BX       lr
;;;68     float AD_Power()
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      ADC_ConvertedValue

                          AREA ||i.AD_Power||, CODE, READONLY, ALIGN=2

                  AD_Power PROC
;;;67     }
;;;68     float AD_Power()
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;69     {
;;;70       return  (float)ADC_Filter()*3.3/4096*24;
000004  f7fffffe          BL       ADC_Filter
000008  4683              MOV      r11,r0
00000a  f7fffffe          BL       __aeabi_i2f
00000e  4682              MOV      r10,r0
000010  f7fffffe          BL       __aeabi_f2d
000014  4606              MOV      r6,r0
000016  f04f3266          MOV      r2,#0x66666666
00001a  4b09              LDR      r3,|L3.64|
00001c  f7fffffe          BL       __aeabi_dmul
000020  2200              MOVS     r2,#0
000022  4b08              LDR      r3,|L3.68|
000024  e9cd0100          STRD     r0,r1,[sp,#0]
000028  f7fffffe          BL       __aeabi_ddiv
00002c  4604              MOV      r4,r0
00002e  2200              MOVS     r2,#0
000030  4b05              LDR      r3,|L3.72|
000032  f7fffffe          BL       __aeabi_dmul
000036  4680              MOV      r8,r0
000038  f7fffffe          BL       __aeabi_d2f
;;;71     }
00003c  e8bd9ffc          POP      {r2-r12,pc}
                          ENDP

                  |L3.64|
                          DCD      0x400a6666
                  |L3.68|
                          DCD      0x40b00000
                  |L3.72|
                          DCD      0x40380000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  ADC_ConvertedValue
                          %        256
