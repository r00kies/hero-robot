; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Mylib -I..\Libraries -I..\CM3 -I..\User -I..\User\debug -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\main.crf ..\User\main.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;7      extern uint8_t SystemInitReady ;
;;;8      void main(void)
000000  4845              LDR      r0,|L1.280|
;;;9      {
;;;10     
;;;11     	  	if ( SysTick_Config(SystemCoreClock/1000))
000002  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000004  f44f727a          MOV      r2,#0x3e8
000008  fbb0f1f2          UDIV     r1,r0,r2
00000c  f1b17f80          CMP      r1,#0x1000000
000010  d301              BCC      |L1.22|
000012  2001              MOVS     r0,#1
000014  e01d              B        |L1.82|
                  |L1.22|
000016  f021407f          BIC      r0,r1,#0xff000000
00001a  1e40              SUBS     r0,r0,#1
00001c  f04f22e0          MOV      r2,#0xe000e000
000020  6150              STR      r0,[r2,#0x14]
000022  1750              ASRS     r0,r2,#29
000024  220f              MOVS     r2,#0xf
000026  2800              CMP      r0,#0
000028  da07              BGE      |L1.58|
00002a  0713              LSLS     r3,r2,#28
00002c  0e1d              LSRS     r5,r3,#24
00002e  4b3b              LDR      r3,|L1.284|
000030  f000040f          AND      r4,r0,#0xf
000034  1f24              SUBS     r4,r4,#4
000036  551d              STRB     r5,[r3,r4]
000038  e003              B        |L1.66|
                  |L1.58|
00003a  0713              LSLS     r3,r2,#28
00003c  0e1c              LSRS     r4,r3,#24
00003e  4b38              LDR      r3,|L1.288|
000040  541c              STRB     r4,[r3,r0]
                  |L1.66|
000042  bf00              NOP      
000044  2000              MOVS     r0,#0
000046  f04f22e0          MOV      r2,#0xe000e000
00004a  6190              STR      r0,[r2,#0x18]
00004c  2007              MOVS     r0,#7
00004e  6110              STR      r0,[r2,#0x10]
000050  2000              MOVS     r0,#0
                  |L1.82|
000052  b108              CBZ      r0,|L1.88|
;;;12       { 
;;;13         while (1);
000054  bf00              NOP      
                  |L1.86|
000056  e7fe              B        |L1.86|
                  |L1.88|
;;;14       }
;;;15     	pid_init_struct();
000058  f7fffffe          BL       pid_init_struct
;;;16     	FLASH_Unlock();
00005c  f7fffffe          BL       FLASH_Unlock
;;;17     	EE_INIT();
000060  f7fffffe          BL       EE_INIT
;;;18     	EE_READ_PID();
000064  f7fffffe          BL       EE_READ_PID
;;;19     	LED_Configuration();
000068  f7fffffe          BL       LED_Configuration
;;;20     	Encoder_Configuration();
00006c  f7fffffe          BL       Encoder_Configuration
;;;21     	Encoder_Start();
000070  f7fffffe          BL       Encoder_Start
;;;22     	LED_Configuration();
000074  f7fffffe          BL       LED_Configuration
;;;23     	Moto_Init();
000078  f7fffffe          BL       Moto_Init
;;;24     	TIM4_Init();
00007c  f7fffffe          BL       TIM4_Init
;;;25         CAN_Configuration();
000080  f7fffffe          BL       CAN_Configuration
;;;26     //	iwdg_init();
;;;27     	ADC_Configuration();
000084  f7fffffe          BL       ADC_Configuration
;;;28     	USART1_Configuration();
000088  f7fffffe          BL       USART1_Configuration
;;;29     	CAN_Configuration();
00008c  f7fffffe          BL       CAN_Configuration
;;;30     	SystemInitReady=1;
000090  2001              MOVS     r0,#1
000092  4924              LDR      r1,|L1.292|
000094  7008              STRB     r0,[r1,#0]
;;;31     	delay_ms(1000);
000096  f44f707a          MOV      r0,#0x3e8
00009a  f7fffffe          BL       delay_ms
;;;32         while(1)
00009e  e03a              B        |L1.278|
                  |L1.160|
;;;33         {	
;;;34     	 if(Moto_pid_1000Hz)
0000a0  4821              LDR      r0,|L1.296|
0000a2  7800              LDRB     r0,[r0,#0]  ; Moto_pid_1000Hz
0000a4  b120              CBZ      r0,|L1.176|
;;;35     	{
;;;36     	       Moto_pid_1000Hz=0;			 //清除标志位
0000a6  2000              MOVS     r0,#0
0000a8  491f              LDR      r1,|L1.296|
0000aa  7008              STRB     r0,[r1,#0]
;;;37              ANO_DT_Data_Exchange();
0000ac  f7fffffe          BL       ANO_DT_Data_Exchange
                  |L1.176|
;;;38     	}
;;;39     		if(Attitude_500Hz)			
0000b0  481e              LDR      r0,|L1.300|
0000b2  7800              LDRB     r0,[r0,#0]  ; Attitude_500Hz
0000b4  b110              CBZ      r0,|L1.188|
;;;40     	{
;;;41     	     Attitude_500Hz=0;	
0000b6  2000              MOVS     r0,#0
0000b8  491c              LDR      r1,|L1.300|
0000ba  7008              STRB     r0,[r1,#0]
                  |L1.188|
;;;42     		 
;;;43     	}
;;;44         	if(Motor_100Hz)				
0000bc  481c              LDR      r0,|L1.304|
0000be  7800              LDRB     r0,[r0,#0]  ; Motor_100Hz
0000c0  b110              CBZ      r0,|L1.200|
;;;45     	{
;;;46     		Motor_100Hz=0;
0000c2  2000              MOVS     r0,#0
0000c4  491a              LDR      r1,|L1.304|
0000c6  7008              STRB     r0,[r1,#0]
                  |L1.200|
;;;47     	}
;;;48     		if(Com_10Hz)
0000c8  481a              LDR      r0,|L1.308|
0000ca  7800              LDRB     r0,[r0,#0]  ; Com_10Hz
0000cc  b140              CBZ      r0,|L1.224|
;;;49     		{
;;;50                 calibrate_IMU();
0000ce  f7fffffe          BL       calibrate_IMU
;;;51     			Com_10Hz=0;
0000d2  2000              MOVS     r0,#0
0000d4  4917              LDR      r1,|L1.308|
0000d6  7008              STRB     r0,[r1,#0]
;;;52     			{
;;;53     				LED_GREEN_ON();
0000d8  2140              MOVS     r1,#0x40
0000da  4817              LDR      r0,|L1.312|
0000dc  f7fffffe          BL       GPIO_ResetBits
                  |L1.224|
;;;54     			}
;;;55     		}
;;;56           if(Set_2Hz)
0000e0  4816              LDR      r0,|L1.316|
0000e2  7800              LDRB     r0,[r0,#0]  ; Set_2Hz
0000e4  b1b8              CBZ      r0,|L1.278|
;;;57     			{
;;;58     			static u8 i;
;;;59     			i++;
0000e6  4816              LDR      r0,|L1.320|
0000e8  7800              LDRB     r0,[r0,#0]  ; i
0000ea  1c40              ADDS     r0,r0,#1
0000ec  4914              LDR      r1,|L1.320|
0000ee  7008              STRB     r0,[r1,#0]
;;;60          
;;;61     			if(i%2)
0000f0  7808              LDRB     r0,[r1,#0]  ; i
0000f2  eb0071d0          ADD      r1,r0,r0,LSR #31
0000f6  1049              ASRS     r1,r1,#1
0000f8  eba00141          SUB      r1,r0,r1,LSL #1
0000fc  b121              CBZ      r1,|L1.264|
;;;62     			{
;;;63     		  LED_RED_ON();
0000fe  2180              MOVS     r1,#0x80
000100  480d              LDR      r0,|L1.312|
000102  f7fffffe          BL       GPIO_ResetBits
000106  e003              B        |L1.272|
                  |L1.264|
;;;64     			}
;;;65           else
;;;66     			{
;;;67           LED_RED_OFF();
000108  2180              MOVS     r1,#0x80
00010a  480b              LDR      r0,|L1.312|
00010c  f7fffffe          BL       GPIO_SetBits
                  |L1.272|
;;;68     			}
;;;69            Set_2Hz=0;
000110  2000              MOVS     r0,#0
000112  490a              LDR      r1,|L1.316|
000114  7008              STRB     r0,[r1,#0]
                  |L1.278|
000116  e7c3              B        |L1.160|
;;;70     		 }			 
;;;71           
;;;72         }
;;;73     
;;;74     }
                          ENDP

                  |L1.280|
                          DCD      SystemCoreClock
                  |L1.284|
                          DCD      0xe000ed18
                  |L1.288|
                          DCD      0xe000e400
                  |L1.292|
                          DCD      SystemInitReady
                  |L1.296|
                          DCD      Moto_pid_1000Hz
                  |L1.300|
                          DCD      Attitude_500Hz
                  |L1.304|
                          DCD      Motor_100Hz
                  |L1.308|
                          DCD      Com_10Hz
                  |L1.312|
                          DCD      0x40010800
                  |L1.316|
                          DCD      Set_2Hz
                  |L1.320|
                          DCD      i

                          AREA ||.data||, DATA, ALIGN=0

                  i
000000  00                DCB      0x00

                  __ARM_use_no_argv EQU 0
